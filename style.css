:root {
  /* --- Customizable Variables --- */
  --button-size: 60px;
  --menu-item-size: 45px;
  --menu-radius: 100px; /* Distance of items from the button */
  --animation-duration: 0.3s;
  --item-stagger-delay: 0.05s;
  --button-color: #646cff;
  --button-hover-color: #535bf2;
  --menu-item-color: #f9f9f9;
  --menu-item-hover-color: #e0e0e0;
  --text-color-light: #213547;
  --text-color-dark: rgba(255, 255, 255, 0.87);
  /* --- End Customizable Variables --- */

  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: var(--text-color-dark);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  padding: 0;
  min-width: 320px;
  min-height: 100vh;
  overflow: hidden; /* Prevent scrollbars caused by dragging */
  position: relative; /* Needed for absolute positioning context */
}

#app {
  width: 100%;
  height: 100%;
  position: relative;
}

#draggable-button {
  position: fixed; /* Use fixed to position relative to viewport */
  left: 50px;     /* Initial position */
  top: 50px;      /* Initial position */
  width: var(--button-size);
  height: var(--button-size);
  background-color: var(--button-color);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: grab;
  z-index: 1001; /* Above menu items */
  transition: background-color 0.2s ease, transform 0.1s ease;
  user-select: none; /* Prevent text selection during drag */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  font-size: calc(var(--button-size) * 0.5); /* Adjust icon size */
}

#draggable-button:hover {
  background-color: var(--button-hover-color);
}

#draggable-button:active {
  cursor: grabbing;
  transform: scale(0.95); /* Slight shrink effect when grabbed */
}

#menu-container {
  position: fixed; /* Position relative to viewport, like the button */
  width: 0; /* Will be controlled by JS/CSS */
  height: 0;
  z-index: 1000; /* Below button but above other content */
  pointer-events: none; /* Allow clicks through when closed */
  transition: opacity var(--animation-duration) ease;
  opacity: 0;
}

#menu-container.open {
  opacity: 1;
  pointer-events: auto; /* Enable interaction when open */
}

.menu-item {
  position: absolute;
  /* Center the item origin */
  top: calc(var(--menu-item-size) / -2);
  left: calc(var(--menu-item-size) / -2);
  width: var(--menu-item-size);
  height: var(--menu-item-size);
  background-color: var(--menu-item-color);
  color: var(--text-color-light); /* Text color for items */
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 12px;
  cursor: pointer;
  opacity: 0;
  transform: scale(0.5) translate(0, 0); /* Start small and at the center */
  transition: background-color 0.2s ease, transform 0.2s ease, opacity var(--animation-duration) ease;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  user-select: none;
}

.menu-item:hover {
  background-color: var(--menu-item-hover-color);
  transform: scale(1.1); /* Slight grow on hover */
}

/* --- Wheel Animation --- */

#menu-container.open .menu-item {
  opacity: 1;
  /* Animation will be applied via JS */
  animation-name: wheel-open;
  animation-duration: var(--animation-duration);
  animation-timing-function: ease-out;
  animation-fill-mode: forwards; /* Keep final state */
}

#menu-container.closed .menu-item.closing {
  opacity: 1; /* Start visible for closing animation */
  animation-name: wheel-close;
  animation-duration: var(--animation-duration);
  animation-timing-function: ease-in;
  animation-fill-mode: forwards; /* Keep final state (hidden) */
}

/* Stagger animation delays using CSS variables set by JS */
#menu-container.open .menu-item {
  animation-delay: var(--animation-delay, 0s);
}
#menu-container.closed .menu-item.closing {
  animation-delay: var(--animation-delay-close, 0s);
}


@keyframes wheel-open {
  0% {
    opacity: 0;
    transform: scale(0.5) rotate(-90deg) translate(0px);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg) translate(var(--translate-x), var(--translate-y));
  }
}

@keyframes wheel-close {
  0% {
    opacity: 1;
    transform: scale(1) rotate(0deg) translate(var(--translate-x), var(--translate-y));
  }
  100% {
    opacity: 0;
    transform: scale(0.5) rotate(-90deg) translate(0px);
  }
}


/* Light mode specific styles */
@media (prefers-color-scheme: light) {
  :root {
    color: var(--text-color-light);
    background-color: #ffffff;
  }
  #draggable-button {
     /* Keep button color consistent or change if needed */
     color: var(--text-color-dark); /* Icon color */
  }
  .menu-item {
    background-color: #e8e8e8; /* Lighter item background */
    color: var(--text-color-light);
  }
   .menu-item:hover {
    background-color: #dcdcdc;
  }
}
